import './wordItem.css';
import { useEffect } from 'react';
import { useState } from 'react';
import { Popover } from 'antd';
import { supabase } from '../../lib/supabaseClient';
import { translationHandler } from '../../lib/translationHandler';
import localforage from 'localforage';

const WordItem = ({ wordData, id, dispatch }) => {

    const highlightMatchedText = () => {
        const word1 = document.getElementById('word' + id).textContent;
        const word2Container = document.getElementById('sentence' + id);
        const word2 = word2Container.textContent;
        const regex = new RegExp(word1, 'gi');
        const highlightedText = word2.replace(regex, `<span>${word1}</span>`);
        word2Container.innerHTML = highlightedText;
    };

    useEffect(() => {
        highlightMatchedText();
    });

    return (
        <div className='words-container'>
            <div id={'word' + id}>
                {wordData.word}
                <Popover
                    content={<PopOver word={wordData.word}></PopOver>}
                    overlayInnerStyle={{
                        display: 'flex',
                        flexDirection: 'column',
                        alignItems: 'stretch',
                        padding: '10px 12px',
                    }}
                    destroyTooltipOnHide={true}
                    autoAdjustOverflow={true}
                    placement="bottom"
                    arrow={false}
                    trigger="click"
                >
                    <svg viewBox="0 0 1024 1024" width="23" height="23"><path d="M599.68 485.056h-8l30.592 164.672c20.352-7.04 38.72-17.344 54.912-31.104a271.36 271.36 0 0 1-40.704-64.64l32.256-4.032c8.896 17.664 19.072 33.28 30.592 46.72 23.872-27.968 42.24-65.152 55.04-111.744l-154.688 0.128z m121.92 133.76c18.368 15.36 39.36 26.56 62.848 33.472l14.784 4.416-8.64 30.336-14.72-4.352a205.696 205.696 0 0 1-76.48-41.728c-20.672 17.92-44.928 31.552-71.232 40.064l20.736 110.912H519.424l-9.984 72.512h385.152c18.112 0 32.704-14.144 32.704-31.616V295.424a32.128 32.128 0 0 0-32.704-31.552H550.528l35.2 189.696h79.424v-31.552h61.44v31.552h102.4v31.616h-42.688c-14.272 55.488-35.712 100.096-64.64 133.568zM479.36 791.68H193.472c-36.224 0-65.472-28.288-65.472-63.168V191.168C128 156.16 157.312 128 193.472 128h327.68l20.544 104.32h352.832c36.224 0 65.472 28.224 65.472 63.104v537.408c0 34.944-29.312 63.168-65.472 63.168H468.608l10.688-104.32zM337.472 548.352v-33.28H272.768v-48.896h60.16V433.28h-60.16v-41.728h64.704v-32.896h-102.4v189.632h102.4z m158.272 0V453.76c0-17.216-4.032-30.272-12.16-39.488-8.192-9.152-20.288-13.696-36.032-13.696a55.04 55.04 0 0 0-24.768 5.376 39.04 39.04 0 0 0-17.088 15.936h-1.984l-5.056-18.56h-28.352V548.48h37.12V480c0-17.088 2.304-29.376 6.912-36.736 4.608-7.424 12.16-11.072 22.528-11.072 7.616 0 13.248 2.56 16.64 7.872 3.52 5.248 5.312 13.056 5.312 23.488v84.736h36.928z" fill="#83D9F4"></path></svg>
                </Popover>
            </div>
            <div id={'sentence' + id}>{`“ ${wordData.sentence} ”`}</div>
            <div>
                <svg onClick={() => {
                    chrome.tabs.create({
                        url: wordData.url
                    });
                }} width="22" height="22" viewBox="0 0 27 27" fill="#B3C0CC">
                    <path d="M11.2501 19.7437L9.25881 21.6787C8.73666 22.2009 8.02848 22.4942 7.29006 22.4942C6.55164 22.4942 5.84346 22.2009 5.32131 21.6787C4.79917 21.1566 4.50583 20.4484 4.50583 19.71C4.50583 18.9716 4.79917 18.2634 5.32131 17.7412L10.4288 12.6225C10.9301 12.1195 11.6056 11.8285 12.3155 11.8097C13.0253 11.7909 13.7153 12.0456 14.2426 12.5212L14.3776 12.6337C14.5909 12.8426 14.8785 12.9581 15.177 12.955C15.4755 12.9518 15.7606 12.8302 15.9694 12.6169C16.1783 12.4035 16.2938 12.116 16.2907 11.8174C16.2875 11.5189 16.1659 11.2338 15.9526 11.025C15.8891 10.9429 15.8215 10.864 15.7501 10.7887C14.7897 9.95321 13.5477 9.51394 12.2756 9.55989C11.0035 9.60585 9.79637 10.1336 8.89881 11.0362L3.72381 16.155C2.84446 17.1121 2.36888 18.372 2.39639 19.6715C2.4239 20.9709 2.95238 22.2095 3.87145 23.1286C4.79052 24.0477 6.02912 24.5761 7.32859 24.6037C8.62806 24.6312 9.88792 24.1556 10.8451 23.2762L12.7913 21.375C12.9835 21.1653 13.0891 20.8907 13.087 20.6063C13.0848 20.3219 12.975 20.0489 12.7797 19.8422C12.5844 19.6355 12.3181 19.5104 12.0343 19.4921C11.7505 19.4739 11.4703 19.5638 11.2501 19.7437ZM23.2763 3.72373C22.3299 2.78324 21.0499 2.25537 19.7157 2.25537C18.3815 2.25537 17.1014 2.78324 16.1551 3.72373L14.2088 5.62498C14.0166 5.83463 13.911 6.10927 13.9132 6.39366C13.9153 6.67804 14.0251 6.95106 14.2204 7.15778C14.4157 7.3645 14.6821 7.48957 14.9659 7.50784C15.2497 7.52611 15.5299 7.43621 15.7501 7.25624L17.6963 5.32123C18.2185 4.79909 18.9266 4.50575 19.6651 4.50575C20.4035 4.50575 21.1117 4.79909 21.6338 5.32123C22.156 5.84338 22.4493 6.55156 22.4493 7.28999C22.4493 8.02841 22.156 8.73659 21.6338 9.25873L16.5263 14.3775C16.025 14.8804 15.3495 15.1714 14.6397 15.1903C13.9298 15.2091 13.2399 14.9544 12.7126 14.4787L12.5776 14.3662C12.3642 14.1574 12.0767 14.0418 11.7781 14.045C11.4796 14.0482 11.1945 14.1698 10.9857 14.3831C10.7768 14.5964 10.6613 14.884 10.6644 15.1825C10.6676 15.4811 10.7892 15.7661 11.0026 15.975C11.0843 16.0586 11.1707 16.1374 11.2613 16.2112C12.2228 17.0442 13.4643 17.4819 14.7356 17.4359C16.007 17.39 17.2137 16.8639 18.1126 15.9637L23.2313 10.845C24.1778 9.90457 24.7138 8.62787 24.7222 7.29364C24.7306 5.95941 24.2108 4.67604 23.2763 3.72373Z" />
                </svg>
                <svg onClick={() => {
                    supabase.from('words').delete().eq('id', wordData.id).then(res => console.log(res));
                    localforage.removeItem(wordData.word);
                    dispatch({
                        type: 'delete',
                        id: wordData.id
                    });
                }} width="24" height="24" viewBox="0 0 29 29" fill="#B3C0CC">
                    <path d="M25.7374 6.28337H20.602V5.19587C20.602 3.50421 19.2728 2.11462 17.5811 2.11462H12.1436C10.5124 2.11462 9.1228 3.50421 9.1228 5.19587V6.28337H3.98739C3.3228 6.28337 2.77905 6.82712 2.77905 7.49171C2.77905 8.15629 3.3228 8.70004 3.98739 8.70004H5.8603V23.4417C5.8603 25.0125 7.12905 26.2813 8.63947 26.2813H21.1457C22.6561 26.2813 23.9249 25.0125 23.9249 23.4417V8.70004H25.7978C26.4624 8.70004 27.0061 8.15629 27.0061 7.49171C27.0061 6.82712 26.402 6.28337 25.7374 6.28337ZM11.5395 5.19587C11.5395 4.83337 11.8416 4.53129 12.1436 4.53129H17.5811C17.9436 4.53129 18.1853 4.83337 18.1853 5.19587V6.28337H11.5395V5.19587ZM21.5686 23.3813C21.5686 23.6834 21.3874 23.925 21.0853 23.925H8.63947C8.3978 23.925 8.15614 23.6834 8.15614 23.3813V8.70004H21.5686V23.3813Z" />
                    <path d="M17.8833 21.448C18.5479 21.448 19.0916 20.9042 19.0916 20.2396V12.3855C19.0916 11.7209 18.5479 11.1771 17.8833 11.1771C17.2187 11.1771 16.675 11.7209 16.675 12.3855V20.2396C16.675 20.9042 17.2187 21.448 17.8833 21.448ZM11.8416 21.448C12.5062 21.448 13.05 20.9042 13.05 20.2396V12.3855C13.05 11.7209 12.5062 11.1771 11.8416 11.1771C11.1771 11.1771 10.6333 11.7209 10.6333 12.3855V20.2396C10.6333 20.9042 11.1771 21.448 11.8416 21.448Z" />
                </svg>
            </div>
        </div >
    )
}

function PopOver({ word }) {

    const [wordInfo, setWordInfo] = useState('查询中');

    useEffect(() => {
        supabase.from('dictionary')
            .select()
            .eq('word', word)
            .then(res => {
                setWordInfo(translationHandler(res.data[0]));
            });
    });

    return (
        <>
            {
                (() => {
                    switch (wordInfo) {
                        case '查询中': {
                            return (<div className='loading'>翻译中</div>);
                        }
                        default: {
                            return (
                                <>
                                    <audio autoPlay id='audioPlayer'>
                                        <source src={`http://dict.youdao.com/dictvoice?type=0&audio=${wordInfo.word}`} type='audio/mpeg'></source>
                                    </audio>
                                    <div className='word-card'>
                                        <div>
                                            <div className='word'>{wordInfo.word}</div>
                                            <div>
                                                {
                                                    wordInfo.tag ?
                                                        wordInfo.tag.map((item, index) => {
                                                            if (item === '雅思' || item === '托福' || item === 'GRE' || item === '考研') {
                                                                return (
                                                                    <div className='tag' key={index}>{item}</div>
                                                                )
                                                            }
                                                        })
                                                        : null
                                                }
                                            </div>
                                        </div>
                                        {
                                            <div className='phonetic_container'>
                                                {
                                                    wordInfo.phonetic ? <div className='phonetic'>
                                                        {wordInfo.phonetic}
                                                    </div> : null
                                                }
                                                <svg onClick={() => {
                                                    let player = document.getElementById('audioPlayer');
                                                    player.play();
                                                }} viewBox="0 0 1024 1024" p-id="8587" width="20" height="20"><path d="M525.541411 131.503033l-230.494605 148.031475h-114.988917c-63.895239 0-115.679649 51.14996-115.679649 115.219161v230.898811c0 63.664995 51.150984 115.219161 115.679649 115.219161h114.988917l230.494605 147.915841c32.582069 14.128789 57.840336-0.980327 57.840336-33.04358V164.54559c0-32.120558-25.892717-46.825468-57.840336-33.042557z m194.223516 186.033997c-10.841929-11.649318-29.122271-12.283768-40.712237-1.384533-11.649318 10.899234-12.226462 29.122271-1.384533 40.770565 5.363148 5.76633 14.531971 18.511609 23.989367 37.772279 16.146749 32.870642 25.892717 71.449285 25.892717 115.507733 0 44.058448-9.745968 82.694397-25.892717 115.507734-9.457396 19.259646-18.626219 32.004925-23.989367 37.772278-10.899234 11.648294-10.264784 29.871331 1.384533 40.770566 11.648294 10.899234 29.871331 10.264784 40.770566-1.384533 9.054213-9.68764 21.509896-26.987654 33.620725-51.727105 19.895119-40.483017 31.774681-87.654362 31.774681-140.996245 0-53.341882-11.879562-100.514251-31.774681-140.996244-12.169157-24.62484-24.625864-41.983183-33.679054-51.612495z m176.806845-35.69599c-23.297612-39.444361-46.825468-66.778916-63.318094-81.483826-11.880585-10.609639-30.102598-9.572006-40.714284 2.36486-10.609639 11.936867-9.573029 30.101575 2.364861 40.712238 2.709715 2.421142 8.131191 7.842619 15.396665 16.261358 12.455683 14.416338 24.911366 31.601742 36.619012 51.439556 33.504068 56.860009 53.630455 123.349329 53.630455 199.066825s-20.126386 142.206816-53.68776 199.125153c-11.706623 19.836791-24.220634 37.022195-36.619012 51.438533-7.265474 8.41874-12.68695 13.840216-15.397689 16.261359-11.879562 10.610662-12.916171 28.833699-2.363837 40.714283 10.553357 11.879562 28.833699 12.916171 40.713261 2.363838 16.493649-14.70491 40.021505-41.98216 63.319117-81.483826 38.522362-65.336054 61.646012-141.745305 61.646012-228.41934 0.058328-86.614683-23.066345-163.023934-61.588707-228.361011z" fill="#83D9F4" p-id="8588"></path></svg>
                                            </div>
                                        }
                                        {
                                            wordInfo.translation.map((item, index) => {
                                                return (
                                                    <div className='translation' key={index}>
                                                        {
                                                            item[0] ? <div className='speech'>{`${item[0]}.`}</div> : null
                                                        }
                                                        <div className='translation-info'>{item[1]}</div>
                                                    </div>
                                                )
                                            })
                                        }
                                        {
                                            wordInfo.exchange ? <div className='line'></div> : null
                                        }
                                        {
                                            wordInfo.exchange ?
                                                wordInfo.exchange.map((item, index) => {
                                                    return (
                                                        <>
                                                            {
                                                                item[0] ?
                                                                    <div className='exchange' key={index}>
                                                                        <div>{item[0]}</div>
                                                                        <div>{item[1]}</div>
                                                                    </div > : null
                                                            }
                                                        </>
                                                    )
                                                })
                                                : null
                                        }
                                    </div >
                                </>
                            )
                        }
                    }
                })()
            }
        </>
    );
}

export { WordItem }

